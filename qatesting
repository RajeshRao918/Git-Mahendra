Stack Overflow
Questions
Jobs
Documentation BETA
Tags
Users

Search...
 
Log In Sign Up
x Dismiss
Improve your security with
Dance Dance Authentication
Now available on Stack Overflow.
Learn more
How to delete a Git branch both locally and remotely?

Ask Question
up vote
9942
down vote
favorite
3412
I want to delete a branch both locally and on my remote project fork on GitHub.

Failed Attempts to Delete Remote Branch

$ git branch -d remotes/origin/bugfix
error: branch 'remotes/origin/bugfix' not found.

$ git branch -d origin/bugfix
error: branch 'origin/bugfix' not found.

$ git branch -rd origin/bugfix
Deleted remote branch origin/bugfix (was 2a14ef7).

$ git push
Everything up-to-date

$ git pull
From github.com:gituser/gitproject
* [new branch] bugfix -> origin/bugfix
Already up-to-date.
What do I need to do differently to successfully delete the remotes/origin/bugfix branch both locally and on GitHub?

git git-branch git-remote
shareimprove this question
edited Nov 17 '16 at 13:56
asked Jan 5 '10 at 1:12

Matthew Rankin
184k2693135
478	 	
Moderator note: If you intend to answer this question, do note that there are already 24 answers posted. Will your new answer add any substantial value? – Robert Harvey♦ Jun 11 '14 at 16:10 
13	 	
Note: for Git 2.5+ (Q2 2015), the exact message will be "deleted remote-tracking branch": see github.com/git/git/commit/… – VonC May 25 '15 at 14:57 
  	 	
Refer here, it worked for me beautifully. Tip: if -d doesn't work use -D to forcefully delete the branch locally – Gautam Singh Feb 21 at 5:30 
add a comment
33 Answers
active oldest votes
1 2 next
up vote
12112
down vote
accepted
Executive Summary

$ git push origin --delete <branch_name>
$ git branch -d <branch_name>
Delete Local Branch

To delete the local branch use:

$ git branch -d branch_name
Note: The -d option is an alias for --delete, which only deletes the branch if it has already been fully merged in its upstream branch. You could also use -D, which is an alias for --delete --force, which deletes the branch "irrespective of its merged status." [Source: man git-branch]

Delete Remote Branch [Updated on 1-Feb-2012]

As of Git v1.7.0, you can delete a remote branch using

$ git push origin --delete <branch_name>
which might be easier to remember than

$ git push origin :<branch_name>
which was added in Git v1.5.0 "to delete a remote branch or a tag."

Therefore, the version of Git you have installed will dictate whether you need to use the easier or harder syntax.

Delete Remote Branch [Original Answer from 5-Jan-2010]

From Chapter 3 of Pro Git by Scott Chacon:

Deleting Remote Branches

Suppose you’re done with a remote branch — say, you and your collaborators are finished with a feature and have merged it into your remote’s master branch (or whatever branch your stable codeline is in). You can delete a remote branch using the rather obtuse syntax git push [remotename] :[branch]. If you want to delete your serverfix branch from the server, you run the following:

$ git push origin :serverfix
To git@github.com:schacon/simplegit.git
 - [deleted]         serverfix
Boom. No more branch on your server. You may want to dog-ear this page, because you’ll need that command, and you’ll likely forget the syntax. A way to remember this command is by recalling the git push [remotename] [localbranch]:[remotebranch] syntax that we went over a bit earlier. If you leave off the [localbranch] portion, then you’re basically saying, “Take nothing on my side and make it be [remotebranch].”
I issued git push origin :bugfix and it worked beautifully. Scott Chacon was right—I will want to dog ear that page (or virtually dog ear by answering this on Stack Overflow).

Then you should execute this on other machines

git fetch --all --prune
to propagate changes.

shareimprove this answer
edited Nov 30 '16 at 23:42

Michael Cole
6,01512642
answered Jan 5 '10 at 1:13

Matthew Rankin
184k2693135
402	 	
If you know the syntax git push origin local_branch:remote_branch, then the syntax to delete a branch with git push origin :remote_branch is kind of cute. There's a void before the : – Marc-André Lafortune May 11 '12 at 4:05
141	 	
Don't forget to do a git fetch --all --prune on other machines after deleting the remote branch on the server. ||| After deleting the local branch with git branch -d and deleting the remote branch with git push origin --delete other machines may still have "obsolete tracking branches" (to see them do git branch -a). To get rid of these do git fetch --all --prune. – Trevor Boyd Smith May 27 '15 at 16:51
2	 	
in addition to @TrevorBoydSmith's git branch -a to view all branches, you can also use git branch -r to view remote branches only. see also git remote show origin - source: gitready.com/intermediate/2009/02/13/list-remote-branches.ht‌​ml – Sandra Sep 9 '15 at 9:53
8	 	
I had to run git branch -D Branch_Name to get rid of the local branch – Kolob Canyon Mar 10 '16 at 1:32
2	 	
@KolobCanyon You only have to use -D if the branch has not been merged into another branch. – BTRUE Apr 5 '16 at 16:27
show 5 more comments
up vote
2307
down vote
Matthew's answer is great for removing remote branches and I also appreciate the explanation, but to make a simple distinction between the two commands:

To remove a local branch from your machine:

git branch -d {the_local_branch} (use -D instead to force deletion without checking merged status)

To remove a remote branch from the server:

git push origin --delete {the_remote_branch}

Reference: https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote
shareimprove this answer
edited Aug 20 '16 at 6:54

Ralf17
93731333
answered Jun 12 '12 at 14:51

Eric Brotto
28k2096158
192	 	
@megido well -D force deletes, -d gives you a warning if it's not already merged in. – TankorSmash Nov 6 '14 at 19:04
4	 	
If your local branch is not merge with master and ran 'git branch -d your_branch then you will error like error: The branch 'your_branch' is not fully merged. If you are sure you want to delete it, run 'git branch -D your_branch'. – geeks Oct 31 '15 at 12:59 
5	 	
I would suggest using -d instead of -D because it is safer. If -d fails due to unmerged commits then you need to assess that and if it is definitely OK to remove then use -D. – rooby Feb 2 '16 at 3:47
2	 	
Others with repository clones where remote branches have been removed should run git remote prune <name> (e.g. git remote prune origin) in order to locally remove stale branches that no longer exist in the remote. – ray Apr 18 '16 at 23:07
  	 	
If your branch in your fork (not always origin), use the proper repository. e.g. git push myRepo :mrbranchtodelete – Dhanuka777 May 19 '16 at 0:53
show 3 more comments
up vote
1242
down vote
The Short Answers

If you want more detailed explanations of the following commands, then see the long answers in the next section.

Deleting a remote branch:

git push origin --delete <branch>  # Git version 1.7.0 or newer
git push origin :<branch>          # Git versions older than 1.7.0
Deleting a local branch:

git branch --delete <branch>
git branch -d <branch> # Shorter version
git branch -D <branch> # Force delete un-merged branches
Deleting a local remote-tracking branch:

git branch --delete --remotes <remote>/<branch>
git branch -dr <remote>/<branch> # Shorter

git fetch <remote> --prune # Delete multiple obsolete tracking branches
git fetch <remote> -p      # Shorter
The Long Answer: there are 3 different branches to delete!

When you're dealing with deleting branches both locally and remotely, keep in mind that there are 3 different branches involved:

The local branch X.
The remote origin branch X.
The local remote-tracking branch origin/X that tracks the remote branch X.
Visualization of 3 branches

The original poster used

git branch -rd origin/bugfix
which only deleted his local remote-tracking branch origin/bugfix, and not the actual remote branch bugfix on origin.

Diagram 2

To delete that actual remote branch, you need

git push origin --delete bugfix
Diagram 3

Additional Details

The following sections describe additional details to consider when deleting your remote and remote-tracking branches.

Pushing to delete remote branches also deletes remote-tracking branches

Note that deleting the remote branch X from the command line using a git push will also delete the local remote-tracking branch origin/X, so it is not necessary to prune the obsolete remote-tracking branch with git fetch --prune or git fetch -p, though it wouldn't hurt if you did it anyway.

You can verify that the remote-tracking branch origin/X was also deleted by running the following:

# View just remote-tracking branches
git branch --remotes
git branch -r

# View both strictly local as well as remote-tracking branches
git branch --all
git branch -a
Pruning the obsolete local remote-tracking branch origin/X

If you didn't delete your remote branch X from the command line (like above), then your local repo will still contain (a now obsolete) remote-tracking branch origin/X. This can happen if you deleted a remote branch directly through GitHub's web interface, for example.

A typical way to remove these obsolete remote-tracking branches (since Git version 1.6.6) is to simply run git fetch with the --prune or shorter -p. Note that this removes all obsolete local remote-tracking branches for any remote branches that no longer exist on the remote:

git fetch origin --prune
git fetch origin -p # Shorter
Here is the relevant quote from the 1.6.6 release notes (emphasis mine):

"git fetch" learned --all and --multipleoptions, to run fetch from many repositories, and --prune option to remove remote tracking branches that went stale. These make "git remote update" and "git remote prune" less necessary (there is no plan to remove "remote update" nor "remote prune", though).
Alternative to above automatic pruning for obsolete remote-tracking branches

Alternatively, instead of pruning your obsolete local remote-tracking branches through git fetch -p, you can avoid making the extra network operation by just manually removing the branch(es) with the --remote or -r flags:

git branch --delete --remotes origin/X
git branch -dr origin/X # Shorter
See Also

git-branch(1) Manual Page.
git-fetch(1) Manual Page.
Pro Git § 3.5 Git Branching - Remote Branches.
shareimprove this answer
edited Mar 10 '16 at 12:20

Valentin Lorentz
5,38842752
answered May 30 '14 at 18:32
user456814
  	 	
From your illustration, I can see there are local clone repo and remote origin repo. So there are at least two physical branches. Where is the third branch to delete? Is the third branch only a pointer pointing to a commit in the local clone repo? – huggie Feb 18 '16 at 2:00
1	 	
@huggie that's pretty much correct. Branches in Git are just bookmarks attached to commits. So in my graphs above, there are X and origin/X bookmarks in the local clone (2 branches), and then there is X on the remote (making 3 branches). – user456814 Feb 23 '16 at 7:33
1	 	
Thank you for giving the visualization of what's happening (3 branches), not just magic spells :) – gnsb Dec 9 '16 at 5:34
add a comment
up vote
503
down vote
+300
You can also use the following to delete the remote branch.

git push --delete origin serverfix
Which does the same thing as

git push origin :serverfix
but it may be easier to remember.

shareimprove this answer
edited Jan 29 '15 at 18:57

Peter Mortensen
10.9k1576109
answered Oct 27 '11 at 22:22

pagetribe
10.1k31818
  	 	
the first deletes local, and the second deletes remote branch.It's not the same – Hazarapet Tunanyan Apr 27 '16 at 21:23
1	 	
@Hazarapet Tunanyan are you sure? i've executed the first command to delete a remote branch and it works. On git 2.7.4. – Kurapika Dec 7 '16 at 16:00
add a comment
up vote
280
down vote
If you want to delete a branch, first checkout to the branch other than the branch to be deleted.

git checkout other_than_branch_to_be_deleted
Deleting the local branch:

git branch -D branch_to_be_deleted
Deleting the remote branch:

git push origin --delete branch_to_be_deleted
shareimprove this answer
edited Jun 9 '15 at 2:04

Willem Van Onsem
46.7k860117
answered Oct 7 '14 at 13:52

Praveen Hiremath
2,892299
  	 	
If u delete the local branch, then just push those changes don't call --delete again. – yuen shi Jul 18 '16 at 6:50
  	 	
This is actually the right Process, – sg28 Nov 16 '16 at 19:52
add a comment
up vote
266
down vote
Tip: When you delete branches using

git branch -d <branchname>    # deletes local branch
or

git push origin :<branchname> # deletes remote branch
only the references are deleted. Even though the branch is actually removed on the remote the references to it still exists in the local repositories of your team members. This means that for other team members the deleted branches are still visible when they do a git branch -a.

To solve this your team members can prune the deleted branches with

git remote prune <repository>
This is typically git remote prune origin.

shareimprove this answer
edited Jan 29 '15 at 18:58

Peter Mortensen
10.9k1576109
answered Nov 7 '12 at 13:02

pfrenssen
3,49811411
11	 	
You should clarify that the above git push operation deletes the local branch and the remote branch. – Annika Backstrom May 21 '13 at 13:51
12	 	
Note that git remote prune is a somewhat obsolete way to remove obsolete remote-tracking branches, the newer way to do it is to use git fetch --prune or git fetch -p. – user456814 Jun 11 '14 at 16:30
1	 	
@RRMadhav, indeed you won't see the deleted branch after deleting it since the reference to the remote branch will be removed for you locally. Anyone else on your team that has checked out that branch will still have that reference and will still see it unless they prune the branch. – pfrenssen Dec 5 '14 at 14:27
add a comment
up vote
201
down vote
git branch -D <name-of-branch>
git branch -D -r origin/<name-of-branch>
git push origin :<name-of-branch>
shareimprove this answer
edited Aug 8 '14 at 20:04
answered Oct 24 '13 at 17:36

Felipe Micaroni Lalli
8,30264472
5	 	
Note that -D forces the deletion. It's always better to use -d, which will remind if you need to do something dangerous. – Jonathon Reinhart Jan 10 '15 at 1:08 
5	 	
ahahah :) it's up to you: use -d if you want to see git crying or -D if you want to cry. – Felipe Micaroni Lalli Feb 13 '15 at 11:21
add a comment
up vote
165
down vote
This is simple: Just run the following command:

To delete a Git branch both locally and remotely, first delete the local branch using command:

git branch -d example
(here example is the branch name)

And after that delete remote branch using command:

git push origin :example
shareimprove this answer
edited Jun 9 '15 at 2:03

Willem Van Onsem
46.7k860117
answered Feb 15 '15 at 15:20

Syeful Islam
2,2061913
add a comment
up vote
141
down vote
Another approach is

git push --prune origin
WARNING: This will delete all remote branches that do not exist locally. Or more comprehensively,

git push --mirror
will effectively make the remote repository look like the local copy of the repository (local heads, remotes and tags are mirrored on remote).

shareimprove this answer
edited Jan 10 '15 at 1:11

Jonathon Reinhart
71.1k16118188
answered Nov 18 '12 at 6:11

imanuelcostigan
1,9052916
101	 	
git push --prune origin looks dangerous... – Nate Jun 28 '13 at 22:37
  	 	
git push --mirror worked for me. – iMitwe Aug 31 '15 at 10:55
  	 	
git push --prune origin didn't do anything for me on gitlab: git clone git://repo.git; git branch -d -r origin/some-branches; git push --prune origin; yields: Everything up-to-date; git fetch; brings locally deleted branches back; git push --mirror; now they are really gone! – eMBee Oct 8 '15 at 16:46
add a comment
up vote
119
down vote
I use the following in my Bash settings:

alias git-shoot="git push origin --delete"
Then you can call:

git-shoot branchname
shareimprove this answer
edited Nov 29 '14 at 6:27

Peter Mortensen
10.9k1576109
answered Apr 2 '13 at 22:11

crizCraig
3,96822740
7	 	
I ended up just add the alias "shoot" into my .gitconfig shoot = push origin --delete – hdost Dec 4 '14 at 18:06
  	 	
If your origin is a Atlassian Stash and the branch is set as the default, you will get an error "By default, deleting the current branch is denied...". I had to change the default branch in Stash to point to another branch before I could delete. – neoscribe Dec 12 '14 at 0:29
  	 	
This is perfectly simple as you've done it, but fyi git also lets you make custom commands. Put git push origin --delete $1 in a file on your path called git-shoot and git shoot branchname will work too. – mahemoff Oct 14 '15 at 7:09
add a comment
up vote
88
down vote
Since January 2013, GitHub included a Delete branch button next to each branch in your "Branches" page.

Relevant blog post: Create and delete branches
shareimprove this answer
edited May 27 '14 at 2:43

Amal Murali
51.3k116991
answered Apr 29 '13 at 10:39

Nacho Coloma
3,1972333
1	 	
I only started using Github this year, so I was wondering why this was such a highly rated question, and why none of the top answers were suggesting to just delete it from the Github web interface! Interesting that it's only a recent addition. – Cam Jackson Sep 11 '13 at 12:18
2	 	
I was going to point this one out. Note that the button won't delete your local branch... see this answer for how to do that: stackoverflow.com/a/10999165/901641 – ArtOfWarfare Oct 29 '13 at 14:02
add a comment
up vote
82
down vote
If you want to complete both these steps with a single command, you can make an alias for it by adding the below to your ~/.gitconfig:

[alias]
    rmbranch = "!f(){ git branch -d ${1} && git push origin --delete ${1}; };f"
Alternatively, you can add this to your global config from the command line using

git config --global alias.rmbranch \
'!f(){ git branch -d ${1} && git push origin --delete ${1}; };f'
NOTE: If using -d (lowercase d), the branch will only be deleted if it has been merged. To force the delete to happen, you will need to use -D (uppercase D).

shareimprove this answer
edited Jun 11 '14 at 16:26
user456814
answered Jan 15 '13 at 19:05

Ryan Kohn
5,91583572
3	 	
This is what I was looking for. My own shell function alias didn't work (Unexpected EOF) and I couldn't figure out why, but this works great! The only change I made was replacing && with ; so that even if the first command fails the second will still execute (sometimes only local or only remote exists). – user1021726 Dec 16 '14 at 8:55
add a comment
up vote
75
down vote
Delete locally:

To delete a local branch, you can use:

git branch -d branch_name 
To delete a branch forcibly, use -D instead of -d.

git branch -D branch_name
Delete remotely:

There are two options:

git push origin :branchname  

git push origin --delete branchname 
I would suggest you use the 2nd way as it is more intuitive.

shareimprove this answer
edited Jun 7 '15 at 10:36
answered May 23 '15 at 8:56

Rahul Gupta
17k22533
add a comment
up vote
72
down vote
You can also do this using git remote prune origin:

$ git remote prune origin
Pruning origin
URL: git@example.com/yourrepo.git
 * [pruned] origin/some-branchs
It prunes and deletes remote-tracking branches from a git branch -r listing.

shareimprove this answer
edited Nov 29 '14 at 6:26

Peter Mortensen
10.9k1576109
answered Mar 12 '13 at 14:57

nickleefly
2,4041727
add a comment
up vote
72
down vote
To delete your branch locally and remotely

Checkout to master branch

git checkout master
Delete your remote branch
git push origin --delete <branch-name>

Delete your local branch
git branch --delete <branch-name>

shareimprove this answer
answered Jan 3 '16 at 21:08

mfathy00
969519
add a comment
up vote
67
down vote
In addition to the other answers, I often use the git_remote_branch tool. It's an extra install, but it gets you a convenient way to interact with remote branches. In this case, to delete:

grb delete branch
I find that I also use the publish and track commands quite often.

shareimprove this answer
edited Aug 3 '13 at 12:33

Peter Mortensen
10.9k1576109
answered Mar 24 '12 at 2:21

u2622
1,89811726
add a comment
up vote
65
down vote
Deleting Branches
Let's assume our work on branch "contact-form" is done and we've already integrated it into "master". Since we don't need it anymore, we can delete it (locally):

$ git branch -d contact-form
And for deleting the remote branch:

git push origin --delete contact-form
shareimprove this answer
edited Nov 18 '15 at 19:51
answered Oct 30 '15 at 12:39

Ulysses Alves
867814
6	 	
This is incorrect. This deletes the local branch and the remote tracking branch reference. It doesn't actually connect to github and delete the branch there. – Geuis Nov 12 '15 at 1:34
1	 	
@Geuis I've edited my answer to cope with your remarks. Please, let me know what do you think about it now. – Ulysses Alves Nov 18 '15 at 11:50
1	 	
yeah, that clears it up. However, you don't need "git branch -dr origin/contact-form" then do you? Once you delete the local and remote branch, there's no more remote to delete. – Geuis Nov 18 '15 at 19:46
1	 	
@Geuis No, I don't. I've updated the question again. Thanks for your suggestions. – Ulysses Alves Nov 18 '15 at 19:56
2	 	
Meant I've updated my "answer", not " question". – Ulysses Alves Nov 18 '15 at 20:14
add a comment
up vote
58
down vote
Delete remote branch

git push origin :<branchname>

Delete local branch

git branch -D <branchname>

Delete local branch steps:

checkout to another branch
delete local branch
shareimprove this answer
edited Feb 19 '16 at 18:05
answered Dec 31 '15 at 9:22

jayxhj
1,105919
1	 	
Does the remote branch deletion requires "git push" afterwards ? – Samitha Chathuranga Feb 17 '16 at 8:32
add a comment
up vote
55
down vote
Simply say:

git branch -d <branch-name>
git push origin :<branch-name>
shareimprove this answer
edited Jun 25 '16 at 12:52

Peter Mortensen
10.9k1576109
answered Apr 23 '15 at 18:06

piyushmandovra
2,0941922
  	 	
This works if its your own branch. But if you are pruning all unneeded branches in the repo (some of which aren't yours) it wouldn't suffice – Kermit_ice_tea Jun 30 '16 at 22:23
  	 	
Dosent work with 1.7.0 or newer, the --delete flag is necessary – Thermech Nov 30 '16 at 14:35 
add a comment
up vote
54
down vote
One liner command delete both local, and remote:

D=branch-name; git branch -D $D; git push origin :$D

or add the alias below to your ~/.gitconfig; usage: git kill branch-name

[alias]
    kill = "!f(){ git branch -D \"$1\";  git push origin --delete \"$1\"; };f"
shareimprove this answer
edited Jan 15 at 8:30
answered Nov 17 '16 at 1:03

Vinnie James
1,0281118
4	 	
⚠️ Use git branch -D carefully in a script, since it force-deletes a branch without checking it has been merged. Use -d to be safe. – caesarsol Mar 13 at 14:05
add a comment
up vote
50
down vote
git push origin --delete branchName
is easier to remember than

git push origin :branchName
shareimprove this answer
edited May 19 '15 at 10:05

Benjamin Hodgson♦
18.1k548102
answered May 2 '15 at 10:59

Smila
654312
add a comment
up vote
44
down vote
Now you can do it with the GitHub Desktop app.

After launching the app

Click on the project containing the branch
Switch to the branch you would like to delete switching branch
From the "Branch" menu, select, "Unpublish...", to have the branch deleted from the GitHub servers. unpublish branch
From the "Branch" menu, select, 'Delete "branch_name"...', to have the branch deleted off of your local machine (aka the machine you are currently working on) delete local branch
shareimprove this answer
edited Dec 16 '16 at 3:58
answered Oct 22 '15 at 7:38

Eric
3,18242241
3	 	
Why the -1 down vote? – Eric Oct 30 '15 at 15:47
10	 	
I didn't downvote, but my thinking is that it isn't substantively helping. The question is obviously asking for a more commandline type answer without having to use an external program, if people were clicking into here, they likely won't be looking for a github for desktop ways. – Daemedeor Nov 6 '15 at 11:51
7	 	
@Daemedeor , I dissagree. In 2010 when the OP asked the question, the UI way of doing it didn't exist and the only option was command line. To indicate that you want a command line only option it should be stated in the question or with the tag, command-line-interface, which in this case is no present. – Eric Nov 6 '15 at 16:00
8	 	
This is exactly what I was looking for too, the Github Desktop documentation doesn't even mention the feature and this is where I ended up when searching for an answer as to what it does. It may not be "the answer" but it is useful. – Daniel Dec 5 '15 at 4:00
1	 	
The git command for deleting a remote branch sucks and I tend to forget it (both new and old). Luckily there are GUI tools that have the option. Git Gui, TortoiseGit and GitHub Desktop have it - I wish Git Extensions had this functionality too. Anyway, what I remember is to start Git Gui from within Git Extensions when I need to delete a remote branch. – vezenkov Mar 25 '16 at 21:59 
add a comment
up vote
43
down vote
This won't work if you have a tag with the same name as the branch on the remote:

$ git push origin :branch-or-tag-name
error: dst refspec branch-or-tag-name matches more than one.
error: failed to push some refs to 'git@github.com:SomeName/some-repo.git'
In that case you need to specify that you want to delete the branch, not the tag:

git push origin :refs/heads/branch-or-tag-name
Similarly, to delete the tag instead of the branch you would use:

git push origin :refs/tags/branch-or-tag-name
shareimprove this answer
edited Oct 20 '14 at 11:30
answered Jul 29 '14 at 9:02

Amiramix
5,26421936
  	 	
This is fine, but people really shouldn't be naming their branches and tags with the same name and same naming scheme in the first place. – user456814 Jul 29 '14 at 10:00
2	 	
Well, my scenario was that I was converting a branch to a tag and it made sense for the tag to have the same name as the branch. By converting I mean merging branch B to A and tagging the last commit in branch B with tag B so that after deleting branch B it can still be easily restored by simply checking out tag B. – Amiramix Jul 30 '14 at 11:59
add a comment
up vote
31
down vote
Many of the other answers will lead to errors/warnings. This approach is relatively fool proof although you may still need git branch -D branch_to_delete if it's not fully merged into some_other_branch, for example.

git checkout some_other_branch
git push origin :branch_to_delete
git branch -d branch_to_delete
Remote pruning isn't needed if you deleted the remote branch. It's only used to get the most up to date remotes available on a repo you're tracking. I've observed git fetch will add remotes, not remove them. Here's an example of when git remote prune origin will actually do something:

User A does the steps above. User B would run the following commands to see the most up to date remote branches

git fetch
git remote prune origin
git branch -r
shareimprove this answer
answered Nov 27 '13 at 3:04

Brandon Cook
847811
  	 	
Users B commands works to remove remote deleted branches.. – Morten Holmgaard Feb 4 '14 at 10:22
add a comment
up vote
28
down vote
I got sick of googling for this answer, so I took a similar approach to the answer that crizCraig posted earlier.

Added the following to my Bash profile:

function gitdelete(){
    git push origin --delete $1
    git branch -D $1
}
Then every time I'm done with a branch (merged into master, for example) I run the following in my terminal:

gitdelete my-branch-name
...which then deletes my-branch-name from origin as as well as locally.

shareimprove this answer
edited Jun 25 '16 at 12:55

Peter Mortensen
10.9k1576109
answered Feb 10 '16 at 19:47

arthurakay
3,61231948
4	 	
expanding on this, --delete "$@" and -D "$@" instead of $1 will handle it for multiple branches. – kunl Jun 27 '16 at 13:15
1	 	
I suggest running git branch -d (with lowercase 'd') first to ensure changes have been merged, and then push if successful (put && in between commands) – bryn Jul 19 '16 at 14:17
  	 	
Use git flow... – Robert Cutajar - Robajz Feb 24 at 14:25
add a comment
up vote
27
down vote
git push origin :bugfix  # Deletes remote branch
git branch -d bugfix     # Must delete local branch manually
If you are sure you want to delete it, run

git branch -D bugfix
Now to clean up deleted remote branches run

git remote prune origin
shareimprove this answer
answered Apr 21 '16 at 16:49

Vivek
3191415
add a comment
up vote
26
down vote
Mashup of all the other answers. Requires Ruby 1.9.3+, tested only on OS X.

Call this file git-remove, make it executable, and put it in your path. Then use, for example, git remove temp.

#!/usr/bin/env ruby
require 'io/console'

if __FILE__ == $0
      branch_name = ARGV[0] if (ARGV[0])
      print "Press Y to force delete local and remote branch #{branch_name}..."
    response = STDIN.getch
    if ['Y', 'y', 'yes'].include?(response)
      puts "\nContinuing."
      `git branch -D #{branch_name}`
      `git branch -D -r origin/#{branch_name}`
      `git push origin --delete #{branch_name}` 
    else
      puts "\nQuitting."
    end
end
shareimprove this answer
edited May 30 '14 at 18:34
user456814
answered Nov 19 '13 at 21:02

Dan Rosenstark
36k45203338
2	 	
one-letter get courtesy of this answer: stackoverflow.com/a/8072675/8047 – Dan Rosenstark Nov 19 '13 at 21:04 
  	 	
and now what happens when your remote is not called 'origin'... – chhh Dec 4 '14 at 4:18
  	 	
@chhh then you need to extend this functionality to make this a variable instead of an assumption. – Dan Rosenstark Dec 5 '14 at 16:44
1	 	
sorry, but install Ruby for that kind of work ? More logical is implementation on bash, which will work out of box. – Reishin May 21 '15 at 19:37
  	 	
@Reishin Ruby is installed on the box just like Bash, at least on OSX. Please see: stackoverflow.com/questions/2342894/…, where this topic has been discarded as opinion-based by SO. – Dan Rosenstark May 21 '15 at 20:03
show 2 more comments
up vote
22
down vote
Before executing

git branch --delete <branch>
make sure you determine first what the EXACT name of the remote branch is by executing:

git ls-remote
This will tell you what to enter EXACTLY for <branch> value. (branch is case sensitive!)

shareimprove this answer
edited Jun 25 '16 at 12:56

Peter Mortensen
10.9k1576109
answered May 20 '16 at 21:42

Joey Stallmeyer
783717
  	 	
this deletes local branch only – Weishi Zeng Jun 21 '16 at 22:18
add a comment
up vote
20
down vote
I also had similar issues, and this seems to work: This deletes local branch. git branch -d the_local_branch

This removes remote branch git push origin :the_remote_branch

Source: Makandra Cards
shareimprove this answer
answered May 2 '16 at 10:37

Srijan Karki
6782720
add a comment
up vote
18
down vote
An alternative option to the command line for deleting remote branches is the GitHub branches page.

See for example: https://github.com/angular/angular.js/branches
Found in the Code -> Branches page of a GitHub repository.

I generally prefer command line myself but this GitHub page shows you lots more information about the branches, such as last updated date and user, and number of commits ahead and behind. It is useful when dealing with a large number of branches.

shareimprove this answer
edited Jun 25 '16 at 12:53

Peter Mortensen
10.9k1576109
answered Feb 4 '16 at 23:34

Bradley Flood
3,2632634
add a comment
1 2 next
protected by Community♦ Jan 20 '13 at 21:48

Thank you for your interest in this question. Because it has attracted low-quality or spam answers that had to be removed, posting an answer now requires 10 reputation on this site (the association bonus does not count). 

Would you like to answer one of these unanswered questions instead?

Not the answer you're looking for?	Browse other questions tagged git git-branch git-remote or ask your own question.

asked

7 years ago

viewed

3873884 times

active

1 month ago

BLOG
Stack Overflow Unveils the Next Steps in Computer Security
And the Most Realistic Developer in Fiction is…
We have 2 open jobs ♥Headset
Headset
Seattle, WA

Business IntelligenceVC Funded1-10 people
Our tech stack

c#asp.net-mvc.net-coresqlangularjsazureelasticsearchxunit
We offer great benefits

 Medical/Dental/Vision
 Forget chairs, standing desks!
 Transit Assistance
 We also have chairs
Learn more
Linked

22
How to delete git remote branch from NetBeans IDE?
1
delete a github branch
6
How to delete “origin/origin/master”
0
Locally deleted branch is not deleted on remote repository
-2
Remove refs/remotes entirely
0
How do I strip branches from a git repository?
2
How to delete a remote duplicate lowercase branch in git
0
Duplicate GIT branch after renaming in sourceTree
591
How do you remove an invalid remote branch reference from Git?
636
How can I know in git if a branch has been already merged into master?
see more linked questions…
Related

4406
How to remove local (untracked) files from the current Git working tree?
3057
How to clone all remote branches in Git?
2570
Make an existing Git branch track a remote branch?
3667
How do I force “git pull” to overwrite local files?
2191
How do you create a remote Git branch?
2771
Move the most recent commit(s) to a new branch with Git
3901
How to check out a remote Git branch?
2190
Change the URI (URL) for a remote Git repository
2690
How do I push a new local branch to a remote Git repository and track it too?
4909
How do I rename a local Git branch?
Hot Network Questions

What is the meaning of a line that passes between the G-clef and the F-clef?
How do I resolve this paradox of counting line segments?
How to animate winding a ribbon onto a cylinder?
Draw a triangulated sphere
Critique: Color and texture use in gymnastics club poster
Where does the name "B-Tension" come from?
What does "the well of the Senate" mean in this sentence and why does it go on to talk about "babies"?
why isn't this function surjective?
sudo vs su (as non-root user)
Caught speeding 111 Mph (179 km/h) in California. How can I settle the case with the court?
command not found: how do I know what to install?
An adjective for something that is not as well-known as it should be
What native word did "second" replace in English?
How to approach applying for a job at a company owned by a friend?
How could cats evolve toxic claws?
Why did the grid fin of the CRS-8/SES 10 booster burn?
how you do you?
'Link'-button instead of complete URL in bibliography
Why do programmable sound generators like SID include a noise generator?
How much training does it need for an A320 pilot to fly an A321?
How to pdftk end minus 1?
Multiple Instances of Crits
Usage of like at the end of a sentence
Convert string[] to Int[] without losing leading zeros
question feed
about us tour help blog chat data legal privacy policy work here advertising info developer jobs directory mobile contact us feedback
TECHNOLOGY	LIFE / ARTS	CULTURE / RECREATION	SCIENCE	OTHER
Stack Overflow
Server Fault
Super User
Web Applications
Ask Ubuntu
Webmasters
Game Development
TeX - LaTeX
Software Engineering
Unix & Linux
Ask Different (Apple)
WordPress Development
Geographic Information Systems
Electrical Engineering
Android Enthusiasts
Information Security
Database Administrators
Drupal Answers
SharePoint
User Experience
Mathematica
Salesforce
ExpressionEngine® Answers
Cryptography
Code Review
Magento
Signal Processing
Raspberry Pi
Programming Puzzles & Code Golf
more (7)
Photography
Science Fiction & Fantasy
Graphic Design
Movies & TV
Music: Practice & Theory
Seasoned Advice (cooking)
Home Improvement
Personal Finance & Money
Academia
more (8)
English Language & Usage
Skeptics
Mi Yodeya (Judaism)
Travel
Christianity
English Language Learners
Japanese Language
Arqade (gaming)
Bicycles
Role-playing Games
Anime & Manga
Motor Vehicle Maintenance & Repair
more (17)
MathOverflow
Mathematics
Cross Validated (stats)
Theoretical Computer Science
Physics
Chemistry
Biology
Computer Science
Philosophy
more (3)
Meta Stack Exchange
Stack Apps
Area 51
Stack Overflow Talent
site design / logo © 2017 Stack Exchange Inc; user contributions licensed under cc by-sa 3.0 with attribution required
rev 2017.3.31.25580
